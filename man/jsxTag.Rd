% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tags.R
\name{jsxTag}
\alias{jsxTag}
\alias{JSX}
\title{Create JSX tags}
\usage{
jsxTag(name, allowedProps = NULL)

JSX(...)
}
\arguments{
\item{name}{JSX component name as a string. Must start with a capital letter.}

\item{allowedProps}{character string of prop names that the component supports.
By default, any props are allowed.}

\item{toHTML}{a function to transform the JSX tag into valid \href{s}{tag()} or
\code{\link[=HTML]{HTML()}}. The default transforms JSX tags into a script tag that depends on
\href{https://github.com/preactjs/preact}{preact} and
\href{https://github.com/developit/htm}{htm} for rendering.}

\item{template}{whether or not to wrap JSX tag(s) in a \href{https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals}{template literal},
which has the benefit of avoiding \href{https://babeljs.io/docs/en/babel-plugin-transform-react-jsx}{transpilation of JSX at runtime}, but
has the downside of \href{https://caniuse.com/template-literals}{not working in IE11}. If you'd prefer a more
classic and powerful approach to JSX rendering, consider setting this value
to \code{NULL} and defining \code{toHTML} to transpile via Babel.}
}
\value{
A function that accepts positional arguments (i.e., children) and named arguments (i.e., attributes) and returns a tag object.
}
\description{
Create JSX tag(s) that can be embedded inside a larger collection of HTML \code{\link[=tag]{tag()}}s.
}
\examples{
Foo <- jsxTag("Foo")
Foo("I like", bar = JSX(tags$i("turtles")))
}
